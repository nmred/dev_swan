#!/usr/local/dev_swan/opt/php/bin/php
<?php
/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4 foldmethod=marker: */
// +---------------------------------------------------------------------------
// | SWAN [ $_SWANBR_SLOGAN_$ ]
// +---------------------------------------------------------------------------
// | Copyright $_SWANBR_COPYRIGHT_$
// +---------------------------------------------------------------------------
// | Version  $_SWANBR_VERSION_$
// +---------------------------------------------------------------------------
// | Licensed ( $_SWANBR_LICENSED_URL_$ )
// +---------------------------------------------------------------------------
// | $_SWANBR_WEB_DOMAIN_$
// +---------------------------------------------------------------------------

require_once 'dev_core.php';
require_once PATH_DSWAN_LIB . 'iterator/sw_iterator_fetch_dir.class.php';
require_once PATH_DSWAN_LIB . 'sw_create_makefile.class.php';

/**
+------------------------------------------------------------------------------
* 批量生成Makefile文件 
+------------------------------------------------------------------------------
* 
* @package 
* @version $_SWANBR_VERSION_$
* @copyright $_SWANBR_COPYRIGHT_$
* @author $_SWANBR_AUTHOR_$ 
+------------------------------------------------------------------------------
*/
class configure
{
	// {{{ members

	/**
	 * 操作的根目录 
	 * 
	 * @var string
	 * @access protected
	 */
	protected $__root_dir = './';

	/**
	 * Makefile.ini的名称 
	 * 
	 * @var string
	 * @access protected
	 */
	protected $__makefile_ini = 'Makefile.ini';

	/**
	 * 忽略的目录 
	 * 
	 * @var string
	 * @access protected
	 */
	protected $__ignore_dir = array(
		'.git/.',
	);

	// }}}
	// {{{ functions
	// {{{ public function run()

	/**
	 * 运行 
	 * 
	 * @access public
	 * @return void
	 */
	public function run($dir_name)
	{
		$this->_create_makefile($dir_name);	
	}

	// }}}
	// {{{ protected function _create_makefile()

	/**
	 * 创建Makefile 
	 * 
	 * @access protected
	 * @return void
	 * @throw Exception
	 */
	protected function _create_makefile($root_name)
	{
		$make_dirs = $this->_get_dirs();
		$current_dir = getcwd();
		foreach ($make_dirs as $dir_name) {
			$path_all = rtrim($this->__root_dir, '/') . '/' .  $dir_name;
			file_exists($path_all) && chdir($path_all);
			$make_file = sw_create_makefile::factory('common');
			$make_file->set_root_dir($root_name)->run();
			chdir($current_dir);
		}
	}

	// }}} 
	// {{{ protected function _get_dirs()
	
	/**
	 * 获取应该生成Makefile文件的目录 
	 * 
	 * @access protected
	 * @return array
	 */
	protected function _get_dirs()
	{
		$make_dirs = array();
		$sw_dir_iterator = new sw_iterator_fetch_dir($this->__root_dir);
		$sw_dir_iterator->set_ignore_dir($this->_get_ignore_dir());
		foreach ($sw_dir_iterator as $key => $value) {
			$filename = $value->getFilename();
			if($filename == $this->__makefile_ini) {
				$make_dirs[] = substr($key, 0, strlen($key)-(strlen($this->__makefile_ini) + 1));
			}
		}

		return $make_dirs;
	}

	// }}}
	// {{{ protected function _get_ignore_dir()

	/**
	 * 获取需要忽略的目录 
	 * 
	 * @access protected
	 * @return array
	 */
	protected function _get_ignore_dir()
	{
		// 查找具有 submodule 的仓库
		$ignore = array();
		$git_config = $this->__root_dir . '.git/config';
		if (is_file($git_config)) {
			$configs = file($git_config);	
			foreach ($configs as $value) {
				if (preg_match('/\[submodule \"(.*)\"\]/i', $value, $matches)) {
					$ignore[] = $matches[1] . '/.';
				}	
			}
		}

		$ignore = array_merge($this->__ignore_dir, $ignore);
		return $ignore;
	}

	// }}}
	// }}}
}

$help = <<<EOL
configure 用法
	-h help
	-m jjcm 批量执行jjcm
	-m build_rpm 打包的时候会用 !!!开发的时候慎用!!!
	-d make 目标目录

EOL;

$opts = getopt("hd:m:");
if (isset($opts['m']) || isset($opts['d'])) {
	if (isset($opts['h'])) {
		echo $help . PHP_EOL;	
		exit(0);
	}
	
	if ($opts['d']) {
		$dir_name = $opts['d'];	
	} else {
		if ($opts['m'] === 'jjcm') {
			$dir_name = '/usr/local/dev_swan/';	
		} else if ($opts['m'] === 'build_rpm') {
			$dir_name = '/usr/local/tmp_dev_swan_git/';	
		} else {
			echo $help . PHP_EOL;	
			exit(0);
		}
	}

	try {
		$test = new configure();
		$test->run($dir_name);
	} catch (Exception $e) {
		echo $e->getMessage() . PHP_EOL;	
	}
} else {
	echo $help . PHP_EOL;	
	exit(0);
}
